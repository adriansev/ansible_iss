# The DEFAULT allows a global definition of the options. They can be overridden in each jail afterwards.

[DEFAULT]

# "enabled" enables the jails.
#  By default all jails are disabled, and it should stay this way. Enable only relevant to your setup jails in your .local or jail.d/*.conf
# true:  jail will be enabled and log files will get monitored for changes
# false: jail is not enabled
enabled = false

# "mode" defines the mode of the filter (see corresponding filter implementation for more info).
mode = normal

# "bantime" is the number of seconds that a host is banned.
bantime  = 90d

# --------------------

# "ignoreself" specifies whether the local resp. own IP addresses should be ignored (default is true). Fail2ban will not ban a host which matches such addresses.
ignoreself = true

# "ignoreip" can be a list of IP addresses, CIDR masks or DNS hosts. Fail2ban will not ban a host which matches an address in this list.
# Several addresses can be defined using space (and/or comma) separator.
ignoreip = 127.0.0.1/8 ::1 85.120.46.0/24 46.243.114.128/25 10.10.8.0/22 172.20.0.0/24 2001:b30:4210::/48

# A host is banned if it has generated "maxretry" during the last "findtime" seconds.
findtime  = 30d

# "maxretry" is the number of failures before a host get banned.
maxretry = 7

# "maxmatches" is the number of matches stored in ticket (resolvable via tag <matches> in actions).
maxmatches = %(maxretry)s

# "backend" specifies the backend used to get files modification. Available options are "pyinotify", "gamin", "polling", "systemd" and "auto".
# This option can be overridden in each jail as well.
#
# pyinotify: requires pyinotify (a file alteration monitor) to be installed. If pyinotify is not installed, Fail2ban will use auto.
# gamin:     requires Gamin (a file alteration monitor) to be installed. If Gamin is not installed, Fail2ban will use auto.
# polling:   uses a polling algorithm which does not require external libraries. 
# systemd:   uses systemd python library to access the systemd journal. Specifying "logpath" is not valid for this backend. See "journalmatch" in the jails associated filter config
# auto:      will try to use the following backends, in order: pyinotify, gamin, polling.
#
# Note: if systemd backend is chosen as the default but you enable a jail for which logs are present only in its own log files, specify some other
#       backend for that jail (e.g. polling) and provide empty value for journalmatch. See https://github.com/fail2ban/fail2ban/issues/959#issuecomment-74901200
backend = auto

# "usedns" specifies if jails should trust hostnames in logs, warn when DNS lookups are performed, or ignore all hostnames in logs
# yes:   if a hostname is encountered, a DNS lookup will be performed.
# warn:  if a hostname is encountered, a DNS lookup will be performed, but it will be logged as a warning.
# no:    if a hostname is encountered, will not be used for banning, but it will be logged as info.
# raw:   use raw value (no hostname), allow use it for no-host filters/actions (example user)
usedns = warn

# "logencoding" specifies the encoding of the log files handled by the jail. This is used to decode the lines from the log file. Typical examples:  "ascii", "utf-8"
#   auto:   will use the system locale setting
logencoding = auto

# "filter" defines the filter to use by the jail. By default jails have names matching their filter name
filter = %(__name__)s[mode=%(mode)s]

# ACTIONS

# Action shortcuts. To be used to define action parameter

# Default banning action (e.g. iptables, iptables-new, iptables-multiport, shorewall, etc) It is used to define action_* variables.
# Can be overridden globally or per section within jail.local file
banaction = iptables-ipset-proto6-allports
banaction_allports = iptables-ipset-proto6-allports

